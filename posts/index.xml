<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>所有文章 - Dilys.Lyu Blog - A Front Programmer.</title><link>https://www.dilyslyu.com/posts/</link><description>所有文章 | Dilys.Lyu Blog - A Front Programmer.</description><generator>Hugo -- gohugo.io</generator><managingEditor>dilys8240@gmail.com (Dilys.Lyu)</managingEditor><webMaster>dilys8240@gmail.com (Dilys.Lyu)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 30 Jun 2022 17:30:18 +0800</lastBuildDate><atom:link href="https://www.dilyslyu.com/posts/" rel="self" type="application/rss+xml"/><item><title> Html中三种空格的区别</title><link>https://www.dilyslyu.com/2022/06/html%E4%B8%AD%E4%B8%89%E7%A7%8D%E7%A9%BA%E6%A0%BC%E7%9A%84%E5%8C%BA%E5%88%AB/</link><pubDate>Thu, 30 Jun 2022 17:30:18 +0800</pubDate><author>作者</author><guid>https://www.dilyslyu.com/2022/06/html%E4%B8%AD%E4%B8%89%E7%A7%8D%E7%A9%BA%E6%A0%BC%E7%9A%84%E5%8C%BA%E5%88%AB/</guid><description>不同空格符号的区别及含义 半角的不断行的空白格（推荐使用）；这是我们使用最多的空格，也就是按下 space 键产生的空格。在 html 中，如果你用空格键产生此空格</description></item><item><title>用户体验问题-页面优化</title><link>https://www.dilyslyu.com/2022/06/%E7%94%A8%E6%88%B7%E4%BD%93%E9%AA%8C%E9%97%AE%E9%A2%98/</link><pubDate>Wed, 29 Jun 2022 16:13:50 +0000</pubDate><author>作者</author><guid>https://www.dilyslyu.com/2022/06/%E7%94%A8%E6%88%B7%E4%BD%93%E9%AA%8C%E9%97%AE%E9%A2%98/</guid><description>需求背景 为了提高用户交互体验，从用户操作使用角度出发，编码时养成一种习惯，做一些有好的提示和优化等。 优化点积累 新增/删除/修改/保存/重置之</description></item><item><title>vue 引入图片静态资源实现盖章效果</title><link>https://www.dilyslyu.com/2022/03/vue-%E5%BC%95%E5%85%A5%E5%9B%BE%E7%89%87%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E5%AE%9E%E7%8E%B0%E7%9B%96%E7%AB%A0%E6%95%88%E6%9E%9C/</link><pubDate>Tue, 22 Mar 2022 20:38:40 +0000</pubDate><author>作者</author><guid>https://www.dilyslyu.com/2022/03/vue-%E5%BC%95%E5%85%A5%E5%9B%BE%E7%89%87%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E5%AE%9E%E7%8E%B0%E7%9B%96%E7%AB%A0%E6%95%88%E6%9E%9C/</guid><description></description></item><item><title>监听页面路由变化刷新页面</title><link>https://www.dilyslyu.com/2022/03/%E7%9B%91%E5%90%AC%E9%A1%B5%E9%9D%A2%E8%B7%AF%E7%94%B1%E5%8F%98%E5%8C%96%E5%88%B7%E6%96%B0%E9%A1%B5%E9%9D%A2/</link><pubDate>Tue, 22 Mar 2022 19:01:50 +0000</pubDate><author>作者</author><guid>https://www.dilyslyu.com/2022/03/%E7%9B%91%E5%90%AC%E9%A1%B5%E9%9D%A2%E8%B7%AF%E7%94%B1%E5%8F%98%E5%8C%96%E5%88%B7%E6%96%B0%E9%A1%B5%E9%9D%A2/</guid><description>需求背景 当页面列表跳转详情页需要携带多个参数，当再返回列表页重新进入详情页时，任何一个参数发生变化都要刷新页面请求数据 实现方式 通过监听路由变</description></item><item><title>滚动翻页发请求</title><link>https://www.dilyslyu.com/2022/03/%E6%BB%9A%E5%8A%A8%E7%BF%BB%E9%A1%B5%E5%8F%91%E8%AF%B7%E6%B1%82/</link><pubDate>Fri, 11 Mar 2022 15:05:25 +0000</pubDate><author>作者</author><guid>https://www.dilyslyu.com/2022/03/%E6%BB%9A%E5%8A%A8%E7%BF%BB%E9%A1%B5%E5%8F%91%E8%AF%B7%E6%B1%82/</guid><description>需求描述 查询列表数据较多，通过滚动分页请求数据优化页面加载数据性能。 每次页面滚动到底部出发查询请求，所有数据请求完毕，鼠标再次向下滚动时，提</description></item><item><title>全量操作以及批量操作</title><link>https://www.dilyslyu.com/2022/03/%E5%85%A8%E9%87%8F%E6%93%8D%E4%BD%9C%E4%BB%A5%E5%8F%8A%E6%89%B9%E9%87%8F%E6%93%8D%E4%BD%9C/</link><pubDate>Thu, 10 Mar 2022 17:42:26 +0000</pubDate><author>作者</author><guid>https://www.dilyslyu.com/2022/03/%E5%85%A8%E9%87%8F%E6%93%8D%E4%BD%9C%E4%BB%A5%E5%8F%8A%E6%89%B9%E9%87%8F%E6%93%8D%E4%BD%9C/</guid><description><![CDATA[1 2 3 4 5 6 &lt;el-button type=&#34;primary&#34; class=&#34;lock&#34; @click=&#34;lockAll&#34;&gt; 全部锁 &lt;/el-button&gt; &lt;el-button type=&#34;text&#34; class=&#34;btn&#34; icon=&#34;el-icon-lock&#34; @click=&#34;batchAll&#34;&gt; 批量锁 &lt;/el-button&gt; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 async lockAll(){//]]></description></item><item><title>自定义删除弹框</title><link>https://www.dilyslyu.com/2022/03/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%88%A0%E9%99%A4%E5%BC%B9%E6%A1%86/</link><pubDate>Thu, 10 Mar 2022 17:14:49 +0000</pubDate><author>作者</author><guid>https://www.dilyslyu.com/2022/03/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%88%A0%E9%99%A4%E5%BC%B9%E6%A1%86/</guid><description><![CDATA[基于 Popover 的属性实现弹框 Popover 的嵌套操作，这相比 Dialog 更为轻量 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 &lt;el-popover placement=&#34;top&#34; width=&#34;160&#34; v-model=&#34;visible&#34;&gt; &lt;p&gt;是否确定删除？&lt;]]></description></item><item><title>vue 基础模版</title><link>https://www.dilyslyu.com/2022/03/vue-%E5%9F%BA%E7%A1%80%E6%A8%A1%E7%89%88/</link><pubDate>Wed, 09 Mar 2022 15:26:27 +0000</pubDate><author>作者</author><guid>https://www.dilyslyu.com/2022/03/vue-%E5%9F%BA%E7%A1%80%E6%A8%A1%E7%89%88/</guid><description><![CDATA[1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 &lt;template&gt; &lt;div id = &#34;app&#34;&gt; &lt;input type=&#34;text&#34; id=&#34;ipt&#34;&gt; &lt;/div&gt; &lt;/template&gt; &lt;script type = &#34;text/javascript&#34;&gt; export default{ name:&#39;app&#39;, components:{}, props:{}, data(){ return{ } }, computed:{},]]></description></item><item><title>怎么让一个 div 水平垂直居中</title><link>https://www.dilyslyu.com/2022/03/%E6%80%8E%E4%B9%88%E8%AE%A9%E4%B8%80%E4%B8%AA-div-%E6%B0%B4%E5%B9%B3%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD/</link><pubDate>Tue, 08 Mar 2022 15:34:10 +0000</pubDate><author>作者</author><guid>https://www.dilyslyu.com/2022/03/%E6%80%8E%E4%B9%88%E8%AE%A9%E4%B8%80%E4%B8%AA-div-%E6%B0%B4%E5%B9%B3%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD/</guid><description><![CDATA[1 2 3 &lt;div class = &#34;parent&#34;&gt; &lt;div class= child&gt;&lt;/div&gt; &lt;/div&gt; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 div.parent{ display:flex; justify-content:center; align-items:center; } div.parent{ position:relative; } div.child{ position:absolute; top:50%; left:50%; transform:translate(-50%,-50%); } /*或者*/ div.child{ width:50px; height:10px;]]></description></item><item><title>ES6之数组扁平化 arr.flat(Infinity)</title><link>https://www.dilyslyu.com/2022/03/%E6%95%B0%E7%BB%84%E6%89%81%E5%B9%B3%E5%8C%96-arr-flat-infinity/</link><pubDate>Mon, 07 Mar 2022 15:50:53 +0000</pubDate><author>作者</author><guid>https://www.dilyslyu.com/2022/03/%E6%95%B0%E7%BB%84%E6%89%81%E5%B9%B3%E5%8C%96-arr-flat-infinity/</guid><description>ES6 之数组的flat(Infinity)扁平化，可以实现多维数组转成一维数组 1 2 3 4 5 6 7 8 9 10 11 12 13 14 let arr1 = [1,2,[3,4]] arr1.flat()//[1, 2, 3, 4] var arr2 = [1, 2, [3, 4, [5, 6]]]; arr2.flat(); //</description></item></channel></rss>